---
- name: Check if the rpm packages are present for EL8
  stat:
    path: "/tmp/{{ item }}"
  register: rpm_check_el8
  loop: "{{ mysql_el8_rpm_packages }}"
  when: mysql_version == "8.0.43" and (ansible_os_family in ["RedHat", "Rocky"]) and ansible_distribution_major_version == "8"

- name: Check if the rpm packages are present for EL9
  stat:
    path: "/tmp/{{ item }}"
  register: rpm_check_el9
  loop: "{{ mysql_el9_rpm_packages }}"
  when: mysql_version == "8.0.43" and (ansible_os_family in ["RedHat", "Rocky"]) and ansible_distribution_major_version == "9"

- name: Check if the rpm packages are present for EL10
  stat:
    path: "/tmp/{{ item }}"
  register: rpm_check_el10
  loop: "{{ mysql_el10_rpm_packages }}"
  when: mysql_version == "8.0.43" and (ansible_os_family in ["RedHat", "Rocky"]) and ansible_distribution_major_version == "10"

- name: Select current rpm_check fact
  ansible.builtin.set_fact:
    rpm_check_current: >-
      {{ (ansible_distribution_major_version | int) == 8 and rpm_check_el8 or
         (ansible_distribution_major_version | int) == 9 and rpm_check_el9 or
         rpm_check_el10 }}

- name: Fail if the rpm packages are not present (current OS only)
  ansible.builtin.fail:
    msg: "{{ item.item }} is not present. Please ensure the rpm packages are present."
  when: 
    - rpm_check_current.results is defined
    - not item.stat.exists
  loop: "{{ rpm_check_current.results }}"
  loop_control:
    label: "{{ item.item }}"

- name: Import MySQL GPG key
  ansible.builtin.rpm_key:
    state: present
    key: https://repo.mysql.com/RPM-GPG-KEY-mysql-2023

- name: Install the rpm packages
  ansible.builtin.package:
    name: "{{ item.item }}"
    state: present
  loop: "{{ rpm_check_current.results }}"
  loop_control:
    label: "{{ item.item }}"

- name: Ensure the MySQL service is enabled and started
  ansible.builtin.service:
    name: mysqld
    enabled: true
    state: started